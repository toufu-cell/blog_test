'use client'

import React, { useState, useEffect } from 'react'
import {
    Container,
    Typography,
    Box,
    Card,
    CardContent,
    Grid,
    Tabs,
    Tab,
    CircularProgress,
    Alert,
    Chip,
    Table,
    TableBody,
    TableCell,
    TableContainer,
    TableHead,
    TableRow,
    Paper,
    List,
    ListItem,
    ListItemText,
    ListItemIcon,
    Divider,
} from '@mui/material'
import {
    TrendingUp,
    Visibility,
    ThumbUp,
    Comment,
    Article,
    People,
    Category,
    LocalOffer,
    Star,
    Timeline,
    BarChart,
    ShowChart,
} from '@mui/icons-material'
import { useAuth } from '@/lib/contexts/AuthContext'
import { analyticsService, UserAnalyticsData, SiteAnalyticsData } from '@/lib/services/analytics'
import { formatDistanceToNow } from 'date-fns'
import { ja } from 'date-fns/locale'
import {
    ResponsiveContainer,
    LineChart,
    Line,
    XAxis,
    YAxis,
    CartesianGrid,
    Tooltip,
    BarChart as RechartsBarChart,
    Bar,
    PieChart,
    Pie,
    Cell,
} from 'recharts'

interface TabPanelProps {
    children?: React.ReactNode
    index: number
    value: number
}

function TabPanel(props: TabPanelProps) {
    const { children, value, index, ...other } = props

    return (
        <div
            role="tabpanel"
            hidden={value !== index}
            id={`analytics-tabpanel-${index}`}
            aria-labelledby={`analytics-tab-${index}`}
            {...other}
        >
            {value === index && <Box sx={{ py: 3 }}>{children}</Box>}
        </div>
    )
}

export default function AnalyticsPage() {
    const { user, isAuthenticated, isLoading } = useAuth()
    const [tabValue, setTabValue] = useState(0)
    const [userAnalytics, setUserAnalytics] = useState<UserAnalyticsData | null>(null)
    const [siteAnalytics, setSiteAnalytics] = useState<SiteAnalyticsData | null>(null)
    const [loading, setLoading] = useState(true)
    const [error, setError] = useState<string | null>(null)

    useEffect(() => {
        if (isAuthenticated && user) {
            loadAnalyticsData()
        }
    }, [isAuthenticated, user])

    const loadAnalyticsData = async () => {
        try {
            setLoading(true)
            setError(null)

            // „É¶„Éº„Ç∂„ÉºÂÄã‰∫∫„ÅÆÂàÜÊûê„Éá„Éº„Çø„ÇíÂèñÂæó
            const userDataPromise = analyticsService.getUserAnalytics()

            // Á∑®ÈõÜËÄÖ‰ª•‰∏ä„ÅÆÂ†¥Âêà„ÄÅ„Çµ„Ç§„ÉàÂÖ®‰Ωì„ÅÆÂàÜÊûê„Éá„Éº„Çø„ÇÇÂèñÂæó
            if (user?.role === 'admin') {
                const [userData, siteData] = await Promise.all([
                    userDataPromise,
                    analyticsService.getSiteAnalytics()
                ])
                setUserAnalytics(userData)
                setSiteAnalytics(siteData)
            } else {
                const userData = await userDataPromise
                setUserAnalytics(userData)
            }

        } catch (err: any) {
            console.error('Analytics data loading error:', err)
            setError('ÂàÜÊûê„Éá„Éº„Çø„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
        } finally {
            setLoading(false)
        }
    }

    const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
        setTabValue(newValue)
    }

    const formatDate = (dateString: string) => {
        return formatDistanceToNow(new Date(dateString), {
            addSuffix: true,
            locale: ja
        })
    }

    const StatCard = ({ icon, title, value, color, subtitle }: {
        icon: React.ReactNode
        title: string
        value: string | number
        color: 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info'
        subtitle?: string
    }) => (
        <Card>
            <CardContent>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                    <Box sx={{ color: `${color}.main` }}>
                        {icon}
                    </Box>
                    <Box sx={{ flex: 1 }}>
                        <Typography variant="h4" color={`${color}.main`}>
                            {value}
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                            {title}
                        </Typography>
                        {subtitle && (
                            <Typography variant="caption" color="text.secondary">
                                {subtitle}
                            </Typography>
                        )}
                    </Box>
                </Box>
            </CardContent>
        </Card>
    )

    if (isLoading || loading) {
        return (
            <Container maxWidth="xl" sx={{ py: 4 }}>
                <Box display="flex" justifyContent="center" alignItems="center" minHeight="60vh">
                    <CircularProgress />
                </Box>
            </Container>
        )
    }

    if (!isAuthenticated) {
        return (
            <Container maxWidth="xl" sx={{ py: 4 }}>
                <Alert severity="warning">
                    ÂàÜÊûêÊ©üËÉΩ„Çí‰ΩøÁî®„Åô„Çã„Å´„ÅØ„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ
                </Alert>
            </Container>
        )
    }

    if (error) {
        return (
            <Container maxWidth="xl" sx={{ py: 4 }}>
                <Alert severity="error">
                    {error}
                </Alert>
            </Container>
        )
    }

    return (
        <Container maxWidth="xl" sx={{ py: 4 }}>
            {/* „Éò„ÉÉ„ÉÄ„Éº */}
            <Box sx={{ mb: 4 }}>
                <Typography variant="h4" gutterBottom>
                    üìä ÂàÜÊûê„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ
                </Typography>
                <Typography variant="body1" color="text.secondary">
                    „ÅÇ„Å™„Åü„ÅÆË®ò‰∫ã„ÅÆ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„Å®„Çµ„Ç§„ÉàÂÖ®‰Ωì„ÅÆÁµ±Ë®à„ÇíÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô
                </Typography>
            </Box>

            {/* „Çø„Éñ */}
            <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>
                <Tabs
                    value={tabValue}
                    onChange={handleTabChange}
                    variant="scrollable"
                    scrollButtons="auto"
                >
                    <Tab
                        label="„Éû„Ç§ÂàÜÊûê"
                        icon={<BarChart />}
                        iconPosition="start"
                    />
                    {user?.role === 'admin' && (
                        <Tab
                            label="„Çµ„Ç§„ÉàÂÖ®‰ΩìÂàÜÊûê"
                            icon={<Timeline />}
                            iconPosition="start"
                        />
                    )}
                </Tabs>
            </Box>

            {/* „Éû„Ç§ÂàÜÊûê„Çø„Éñ */}
            <TabPanel value={tabValue} index={0}>
                {userAnalytics && (
                    <Box>
                        {/* Ê¶ÇË¶ÅÁµ±Ë®à„Ç´„Éº„Éâ */}
                        <Typography variant="h5" gutterBottom sx={{ mb: 3 }}>
                            Ê¶ÇË¶ÅÁµ±Ë®à
                        </Typography>
                        <Grid container spacing={3} sx={{ mb: 4 }}>
                            <Grid size={{ xs: 12, sm: 6, md: 3 }}>
                                <StatCard
                                    icon={<Article sx={{ fontSize: 40 }} />}
                                    title="ÊäïÁ®øË®ò‰∫ãÊï∞"
                                    value={userAnalytics.overview.total_articles}
                                    color="primary"
                                    subtitle={`ÊúÄËøë30Êó•: ${userAnalytics.overview.recent_articles}‰ª∂`}
                                />
                            </Grid>
                            <Grid size={{ xs: 12, sm: 6, md: 3 }}>
                                <StatCard
                                    icon={<Visibility sx={{ fontSize: 40 }} />}
                                    title="Á∑èÈñ≤Ë¶ßÊï∞"
                                    value={userAnalytics.overview.total_views.toLocaleString()}
                                    color="success"
                                    subtitle={`Âπ≥Âùá: ${userAnalytics.overview.avg_views_per_article}/Ë®ò‰∫ã`}
                                />
                            </Grid>
                            <Grid size={{ xs: 12, sm: 6, md: 3 }}>
                                <StatCard
                                    icon={<ThumbUp sx={{ fontSize: 40 }} />}
                                    title="Á∑è„ÅÑ„ÅÑ„Å≠Êï∞"
                                    value={userAnalytics.overview.total_likes.toLocaleString()}
                                    color="warning"
                                    subtitle={`Âπ≥Âùá: ${userAnalytics.overview.avg_likes_per_article}/Ë®ò‰∫ã`}
                                />
                            </Grid>
                            <Grid size={{ xs: 12, sm: 6, md: 3 }}>
                                <StatCard
                                    icon={<Comment sx={{ fontSize: 40 }} />}
                                    title="Á∑è„Ç≥„É°„É≥„ÉàÊï∞"
                                    value={userAnalytics.overview.total_comments.toLocaleString()}
                                    color="info"
                                />
                            </Grid>
                        </Grid>

                        {/* „Ç≥„É≥„ÉÜ„É≥„ÉÑ„Ç∞„É™„ÉÉ„Éâ */}
                        <Grid container spacing={3}>
                            {/* ‰∫∫Ê∞óË®ò‰∫ã */}
                            <Grid size={{ xs: 12, md: 6 }}>
                                <Card>
                                    <CardContent>
                                        <Typography variant="h6" gutterBottom>
                                            <Star sx={{ mr: 1, verticalAlign: 'middle' }} />
                                            ‰∫∫Ê∞óË®ò‰∫ã„Éà„ÉÉ„Éó5
                                        </Typography>
                                        {userAnalytics.popular_articles.length > 0 ? (
                                            <List>
                                                {userAnalytics.popular_articles.map((article, index) => (
                                                    <ListItem key={article.id} divider={index < userAnalytics.popular_articles.length - 1}>
                                                        <ListItemText
                                                            primary={article.title}
                                                            secondary={
                                                                <Box sx={{ display: 'flex', gap: 2, mt: 1 }}>
                                                                    <Chip
                                                                        icon={<Visibility />}
                                                                        label={article.view_count}
                                                                        size="small"
                                                                        variant="outlined"
                                                                    />
                                                                    <Chip
                                                                        icon={<ThumbUp />}
                                                                        label={article.like_count}
                                                                        size="small"
                                                                        variant="outlined"
                                                                    />
                                                                    <Typography variant="caption" color="text.secondary">
                                                                        {formatDate(article.published_at)}
                                                                    </Typography>
                                                                </Box>
                                                            }
                                                        />
                                                    </ListItem>
                                                ))}
                                            </List>
                                        ) : (
                                            <Typography variant="body2" color="text.secondary">
                                                „Åæ„Å†ÂÖ¨ÈñãË®ò‰∫ã„Åå„ÅÇ„Çä„Åæ„Åõ„Çì
                                            </Typography>
                                        )}
                                    </CardContent>
                                </Card>
                            </Grid>

                            {/* ÊúÄËøë„ÅÆÊ¥ªÂãï */}
                            <Grid size={{ xs: 12, md: 6 }}>
                                <Card>
                                    <CardContent>
                                        <Typography variant="h6" gutterBottom>
                                            <TrendingUp sx={{ mr: 1, verticalAlign: 'middle' }} />
                                            ÊúÄËøë„ÅÆË®ò‰∫ã
                                        </Typography>
                                        {userAnalytics.recent_activity.length > 0 ? (
                                            <List>
                                                {userAnalytics.recent_activity.slice(0, 5).map((article, index) => (
                                                    <ListItem key={article.id} divider={index < 4}>
                                                        <ListItemText
                                                            primary={article.title}
                                                            secondary={
                                                                <Box sx={{ display: 'flex', gap: 2, mt: 1 }}>
                                                                    <Chip
                                                                        icon={<Visibility />}
                                                                        label={article.view_count}
                                                                        size="small"
                                                                        variant="outlined"
                                                                    />
                                                                    <Typography variant="caption" color="text.secondary">
                                                                        {formatDate(article.published_at)}
                                                                    </Typography>
                                                                </Box>
                                                            }
                                                        />
                                                    </ListItem>
                                                ))}
                                            </List>
                                        ) : (
                                            <Typography variant="body2" color="text.secondary">
                                                „Åæ„Å†ÂÖ¨ÈñãË®ò‰∫ã„Åå„ÅÇ„Çä„Åæ„Åõ„Çì
                                            </Typography>
                                        )}
                                    </CardContent>
                                </Card>
                            </Grid>

                            {/* ÊúàÂà•Áµ±Ë®à„ÉÅ„É£„Éº„Éà */}
                            <Grid size={{ xs: 12, md: 8 }}>
                                <Card>
                                    <CardContent>
                                        <Typography variant="h6" gutterBottom>
                                            <ShowChart sx={{ mr: 1, verticalAlign: 'middle' }} />
                                            ÊúàÂà•„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊé®Áßª
                                        </Typography>
                                        {userAnalytics.monthly_stats.length > 0 ? (
                                            <Box sx={{ width: '100%', height: 300 }}>
                                                <ResponsiveContainer>
                                                    <LineChart data={userAnalytics.monthly_stats}>
                                                        <CartesianGrid strokeDasharray="3 3" />
                                                        <XAxis dataKey="month" />
                                                        <YAxis />
                                                        <Tooltip />
                                                        <Line
                                                            type="monotone"
                                                            dataKey="articles"
                                                            stroke="#1976d2"
                                                            strokeWidth={2}
                                                            name="Ë®ò‰∫ãÊï∞"
                                                        />
                                                        <Line
                                                            type="monotone"
                                                            dataKey="views"
                                                            stroke="#2e7d32"
                                                            strokeWidth={2}
                                                            name="Èñ≤Ë¶ßÊï∞"
                                                        />
                                                        <Line
                                                            type="monotone"
                                                            dataKey="likes"
                                                            stroke="#ed6c02"
                                                            strokeWidth={2}
                                                            name="„ÅÑ„ÅÑ„Å≠Êï∞"
                                                        />
                                                    </LineChart>
                                                </ResponsiveContainer>
                                            </Box>
                                        ) : (
                                            <Typography variant="body2" color="text.secondary">
                                                „Åæ„Å†Áµ±Ë®à„Éá„Éº„Çø„Åå„ÅÇ„Çä„Åæ„Åõ„Çì
                                            </Typography>
                                        )}
                                    </CardContent>
                                </Card>
                            </Grid>

                            {/* „Ç´„ÉÜ„Ç¥„É™Âà•Áµ±Ë®à„ÉÅ„É£„Éº„Éà */}
                            <Grid size={{ xs: 12, md: 4 }}>
                                <Card>
                                    <CardContent>
                                        <Typography variant="h6" gutterBottom>
                                            <Category sx={{ mr: 1, verticalAlign: 'middle' }} />
                                            „Ç´„ÉÜ„Ç¥„É™Âà•Ë®ò‰∫ãÊï∞
                                        </Typography>
                                        {userAnalytics.category_stats.length > 0 ? (
                                            <Box sx={{ width: '100%', height: 300 }}>
                                                <ResponsiveContainer>
                                                    <PieChart>
                                                        <Pie
                                                            data={userAnalytics.category_stats.map((cat, index) => ({
                                                                name: cat.category__name || 'Êú™ÂàÜÈ°û',
                                                                value: cat.count,
                                                                fill: [
                                                                    '#1976d2', '#2e7d32', '#ed6c02', '#d32f2f',
                                                                    '#7b1fa2', '#1565c0', '#388e3c', '#f57c00',
                                                                    '#c62828', '#512da8'
                                                                ][index % 10]
                                                            }))}
                                                            cx="50%"
                                                            cy="50%"
                                                            labelLine={false}
                                                            label={({ name, percent }) => `${name} ${percent ? (percent * 100).toFixed(0) : 0}%`}
                                                            outerRadius={80}
                                                            fill="#8884d8"
                                                            dataKey="value"
                                                        />
                                                        <Tooltip />
                                                    </PieChart>
                                                </ResponsiveContainer>
                                            </Box>
                                        ) : (
                                            <Typography variant="body2" color="text.secondary">
                                                „Åæ„Å†Áµ±Ë®à„Éá„Éº„Çø„Åå„ÅÇ„Çä„Åæ„Åõ„Çì
                                            </Typography>
                                        )}
                                    </CardContent>
                                </Card>
                            </Grid>

                            {/* „Ç´„ÉÜ„Ç¥„É™Âà•Ë©≥Á¥∞Áµ±Ë®à„ÉÜ„Éº„Éñ„É´ */}
                            <Grid size={12}>
                                <Card>
                                    <CardContent>
                                        <Typography variant="h6" gutterBottom>
                                            <Category sx={{ mr: 1, verticalAlign: 'middle' }} />
                                            „Ç´„ÉÜ„Ç¥„É™Âà•Ë©≥Á¥∞Áµ±Ë®à
                                        </Typography>
                                        {userAnalytics.category_stats.length > 0 ? (
                                            <TableContainer>
                                                <Table>
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell>„Ç´„ÉÜ„Ç¥„É™</TableCell>
                                                            <TableCell align="right">Ë®ò‰∫ãÊï∞</TableCell>
                                                            <TableCell align="right">Á∑èÈñ≤Ë¶ßÊï∞</TableCell>
                                                            <TableCell align="right">Á∑è„ÅÑ„ÅÑ„Å≠Êï∞</TableCell>
                                                            <TableCell align="right">Âπ≥ÂùáÈñ≤Ë¶ßÊï∞</TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        {userAnalytics.category_stats.map((category) => (
                                                            <TableRow key={category.category__name || 'uncategorized'}>
                                                                <TableCell>
                                                                    {category.category__name || 'Êú™ÂàÜÈ°û'}
                                                                </TableCell>
                                                                <TableCell align="right">{category.count}</TableCell>
                                                                <TableCell align="right">{category.views?.toLocaleString() || 0}</TableCell>
                                                                <TableCell align="right">{category.likes?.toLocaleString() || 0}</TableCell>
                                                                <TableCell align="right">
                                                                    {Math.round((category.views || 0) / Math.max(category.count, 1))}
                                                                </TableCell>
                                                            </TableRow>
                                                        ))}
                                                    </TableBody>
                                                </Table>
                                            </TableContainer>
                                        ) : (
                                            <Typography variant="body2" color="text.secondary">
                                                „Åæ„Å†Áµ±Ë®à„Éá„Éº„Çø„Åå„ÅÇ„Çä„Åæ„Åõ„Çì
                                            </Typography>
                                        )}
                                    </CardContent>
                                </Card>
                            </Grid>
                        </Grid>
                    </Box>
                )}
            </TabPanel>

            {/* „Çµ„Ç§„ÉàÂÖ®‰ΩìÂàÜÊûê„Çø„Éñ */}
            {user?.role === 'admin' && (
                <TabPanel value={tabValue} index={1}>
                    {siteAnalytics && (
                        <Box>
                            {/* „Çµ„Ç§„ÉàÂÖ®‰ΩìÁµ±Ë®à„Ç´„Éº„Éâ */}
                            <Typography variant="h5" gutterBottom sx={{ mb: 3 }}>
                                „Çµ„Ç§„ÉàÂÖ®‰ΩìÁµ±Ë®à
                            </Typography>
                            <Grid container spacing={3} sx={{ mb: 4 }}>
                                <Grid size={{ xs: 12, sm: 6, md: 3 }}>
                                    <StatCard
                                        icon={<People sx={{ fontSize: 40 }} />}
                                        title="Á∑è„É¶„Éº„Ç∂„ÉºÊï∞"
                                        value={siteAnalytics.overview.total_users}
                                        color="primary"
                                        subtitle={`Êñ∞Ë¶è30Êó•: ${siteAnalytics.overview.new_users_30d}‰∫∫`}
                                    />
                                </Grid>
                                <Grid size={{ xs: 12, sm: 6, md: 3 }}>
                                    <StatCard
                                        icon={<Article sx={{ fontSize: 40 }} />}
                                        title="Á∑èË®ò‰∫ãÊï∞"
                                        value={siteAnalytics.overview.total_articles}
                                        color="secondary"
                                        subtitle={`Êñ∞Ë¶è30Êó•: ${siteAnalytics.overview.new_articles_30d}‰ª∂`}
                                    />
                                </Grid>
                                <Grid size={{ xs: 12, sm: 6, md: 3 }}>
                                    <StatCard
                                        icon={<Visibility sx={{ fontSize: 40 }} />}
                                        title="Á∑èÈñ≤Ë¶ßÊï∞"
                                        value={siteAnalytics.overview.total_views.toLocaleString()}
                                        color="success"
                                    />
                                </Grid>
                                <Grid size={{ xs: 12, sm: 6, md: 3 }}>
                                    <StatCard
                                        icon={<ThumbUp sx={{ fontSize: 40 }} />}
                                        title="Á∑è„ÅÑ„ÅÑ„Å≠Êï∞"
                                        value={siteAnalytics.overview.total_likes.toLocaleString()}
                                        color="warning"
                                    />
                                </Grid>
                            </Grid>

                            {/* „ÉÅ„É£„Éº„Éà„Ç®„É™„Ç¢ */}
                            <Grid container spacing={3} sx={{ mb: 4 }}>
                                {/* „Çµ„Ç§„ÉàÊàêÈï∑„ÉÅ„É£„Éº„Éà */}
                                <Grid size={{ xs: 12, md: 8 }}>
                                    <Card>
                                        <CardContent>
                                            <Typography variant="h6" gutterBottom>
                                                <Timeline sx={{ mr: 1, verticalAlign: 'middle' }} />
                                                „Çµ„Ç§„ÉàÊàêÈï∑Êé®Áßª
                                            </Typography>
                                            <Box sx={{ width: '100%', height: 300 }}>
                                                <ResponsiveContainer>
                                                    <LineChart data={siteAnalytics.growth_stats}>
                                                        <CartesianGrid strokeDasharray="3 3" />
                                                        <XAxis dataKey="month" />
                                                        <YAxis />
                                                        <Tooltip />
                                                        <Line
                                                            type="monotone"
                                                            dataKey="new_users"
                                                            stroke="#1976d2"
                                                            strokeWidth={2}
                                                            name="Êñ∞Ë¶è„É¶„Éº„Ç∂„Éº"
                                                        />
                                                        <Line
                                                            type="monotone"
                                                            dataKey="new_articles"
                                                            stroke="#2e7d32"
                                                            strokeWidth={2}
                                                            name="Êñ∞Ë¶èË®ò‰∫ã"
                                                        />
                                                    </LineChart>
                                                </ResponsiveContainer>
                                            </Box>
                                        </CardContent>
                                    </Card>
                                </Grid>

                                {/* „É¶„Éº„Ç∂„ÉºÂΩπÂâ≤Áµ±Ë®à„ÉÅ„É£„Éº„Éà */}
                                <Grid size={{ xs: 12, md: 4 }}>
                                    <Card>
                                        <CardContent>
                                            <Typography variant="h6" gutterBottom>
                                                <People sx={{ mr: 1, verticalAlign: 'middle' }} />
                                                „É¶„Éº„Ç∂„ÉºÂΩπÂâ≤Âà•Áµ±Ë®à
                                            </Typography>
                                            <Box sx={{ width: '100%', height: 300 }}>
                                                <ResponsiveContainer>
                                                    <PieChart>
                                                        <Pie
                                                            data={siteAnalytics.user_role_stats.map((role, index) => ({
                                                                name: role.role,
                                                                value: role.count,
                                                                fill: ['#1976d2', '#2e7d32', '#ed6c02', '#d32f2f'][index % 4]
                                                            }))}
                                                            cx="50%"
                                                            cy="50%"
                                                            labelLine={false}
                                                            label={({ name, percent }) => `${name} ${percent ? (percent * 100).toFixed(0) : 0}%`}
                                                            outerRadius={80}
                                                            fill="#8884d8"
                                                            dataKey="value"
                                                        />
                                                        <Tooltip />
                                                    </PieChart>
                                                </ResponsiveContainer>
                                            </Box>
                                        </CardContent>
                                    </Card>
                                </Grid>
                            </Grid>

                            {/* „Çµ„Ç§„ÉàÂÖ®‰Ωì„Ç≥„É≥„ÉÜ„É≥„ÉÑ */}
                            <Grid container spacing={3}>
                                {/* „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„É¶„Éº„Ç∂„Éº */}
                                <Grid size={{ xs: 12, md: 6 }}>
                                    <Card>
                                        <CardContent>
                                            <Typography variant="h6" gutterBottom>
                                                <Star sx={{ mr: 1, verticalAlign: 'middle' }} />
                                                „Ç¢„ÇØ„ÉÜ„Ç£„ÉñÊäïÁ®øËÄÖ
                                            </Typography>
                                            <List>
                                                {siteAnalytics.active_authors.slice(0, 5).map((author, index) => (
                                                    <ListItem key={author.id} divider={index < 4}>
                                                        <ListItemText
                                                            primary={`${author.last_name || ''} ${author.first_name || ''} (@${author.username})`}
                                                            secondary={`${author.article_count}Ë®ò‰∫ã`}
                                                        />
                                                    </ListItem>
                                                ))}
                                            </List>
                                        </CardContent>
                                    </Card>
                                </Grid>

                                {/* „Ç´„ÉÜ„Ç¥„É™Âà•Ë®ò‰∫ãÁµ±Ë®à */}
                                <Grid size={{ xs: 12, md: 6 }}>
                                    <Card>
                                        <CardContent>
                                            <Typography variant="h6" gutterBottom>
                                                <Category sx={{ mr: 1, verticalAlign: 'middle' }} />
                                                „Ç´„ÉÜ„Ç¥„É™Âà•Ë®ò‰∫ãÁµ±Ë®à
                                            </Typography>
                                            <List>
                                                {siteAnalytics.category_stats.slice(0, 5).map((category, index) => (
                                                    <ListItem key={category.name} divider={index < 4}>
                                                        <ListItemText
                                                            primary={category.name}
                                                            secondary={`${category.article_count}Ë®ò‰∫ã | ${category.total_views?.toLocaleString() || 0}Èñ≤Ë¶ß`}
                                                        />
                                                    </ListItem>
                                                ))}
                                            </List>
                                        </CardContent>
                                    </Card>
                                </Grid>

                                {/* ‰∫∫Ê∞óË®ò‰∫ãÂÖ®‰Ωì */}
                                <Grid size={12}>
                                    <Card>
                                        <CardContent>
                                            <Typography variant="h6" gutterBottom>
                                                <TrendingUp sx={{ mr: 1, verticalAlign: 'middle' }} />
                                                „Çµ„Ç§„ÉàÂÖ®‰Ωì„ÅÆ‰∫∫Ê∞óË®ò‰∫ã
                                            </Typography>
                                            <TableContainer>
                                                <Table>
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell>„Çø„Ç§„Éà„É´</TableCell>
                                                            <TableCell>ËëóËÄÖ</TableCell>
                                                            <TableCell align="right">Èñ≤Ë¶ßÊï∞</TableCell>
                                                            <TableCell align="right">„ÅÑ„ÅÑ„Å≠Êï∞</TableCell>
                                                            <TableCell>ÂÖ¨ÈñãÊó•</TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        {siteAnalytics.popular_articles.slice(0, 10).map((article) => (
                                                            <TableRow key={article.id}>
                                                                <TableCell>{article.title}</TableCell>
                                                                <TableCell>@{article.author__username}</TableCell>
                                                                <TableCell align="right">{article.view_count.toLocaleString()}</TableCell>
                                                                <TableCell align="right">{article.like_count.toLocaleString()}</TableCell>
                                                                <TableCell>{formatDate(article.published_at)}</TableCell>
                                                            </TableRow>
                                                        ))}
                                                    </TableBody>
                                                </Table>
                                            </TableContainer>
                                        </CardContent>
                                    </Card>
                                </Grid>
                            </Grid>
                        </Box>
                    )}
                </TabPanel>
            )}
        </Container>
    )
} 